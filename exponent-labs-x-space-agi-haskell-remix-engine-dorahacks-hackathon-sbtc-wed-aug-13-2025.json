{
  "metadata": {
    "title": "Exponent Labs Twitter Spaces - AGI Development Through Haskell Remix Engines and DORA Hacks",
    "date": "August 13, 2025",
    "participants": [
      "MICHAEL JAGDEO (HEADHUNTER LAUNCHING STARTUPS WITH THE SYNDICATE)",
      "ROCKY (ENGINEERING MANAGER AT ELITE TEAM HEALTH)",
      "TEAM MEMBERS AND COMMUNITY PARTICIPANTS",
      "STACKS AI GUILD MEMBERS"
    ],
    "duration": "~1 hour 35 minutes",
    "focus": "AGI development through Haskell remix engines, human-AI collaboration, and DORA Hacks participation"
  },
  "core_theoretical_frameworks": {
    "logic_systems": {
      "predicate_logic": {
        "description": "Michael's evolution from music-based to programming-based AI interactions",
        "quote": "I am learning how to program and change the environment. Change the behavior. I am evolving in the context of the places I'm in and the people I'm with.",
        "practical_application": "Creating remix engines for domains to understand functional programming and state management, having AI do actual computation with concepts and objects rather than just processing strings",
        "specific_example": "The more I understand about data structures and algorithms, the more it rearranges information in my brain, which is changing me as a person because it's forcing me to think differently about problem-solving."
      },
      "propositional_logic": {
        "description": "Applied to decision-making about competing programming paradigms and AI approaches",
        "quote": "So I was like, oh, so you're saying that Haskell is a better tool for state management than other paradigms? And grok said, yeah.",
        "practical_application": "Evaluating which programming approach provides optimal state management vs. complexity through systematic comparison",
        "specific_example": "Creating comparison frameworks that juxtapose different programming paradigms with the new Haskell remix engine approach across feature aspects, primary utility, computation type, state management, security model, innovation driver, and sustainability"
      },
      "modal_logic": {
        "description": "Reasoning about alternative futures and agent communication systems",
        "quote": "Even myself, I'm talking to the guys about having the agents collaborate in creative domains, not even using traditional programming, because if we have agents work with humans, why would we force them to use only technical approaches?",
        "practical_application": "Exploring what happens when AGI agents communicate in constructed languages vs. natural languages",
        "specific_example": "Designing communication protocols between AI agents that optimize for creativity and problem-solving rather than just technical efficiency"
      },
              "boolean_logic": {
          "description": "Managing AI creativity and decision-making boundaries",
          "quote": "We need to create systems that can handle both creative and constrained modes of operation.",
          "practical_application": "Creating decision trees for AI agents to manage creative boundaries and ethical constraints",
          "specific_example": "Implementing boolean flags in AI systems to control when agents can be creative vs. when they must follow strict protocols"
        }
    },
    "blooms_two_sigma_problem": {
      "description": "Applied to personalized learning systems and adapting explanations based on user knowledge",
      "quote": "How would you describe your familiarity with functional programming, artificial intelligence or computational creativity? Beginner, intermediate, or expert?",
      "practical_application": "Creating AI systems that adjust their explanations based on the user's background and expertise level",
      "specific_example": "The ThoughtMiner agent that explains remix engines to different audiences - beginners get music metaphors, experts get mathematical formalisms"
    },
    "category_theory": {
      "description": "Mathematical framework for understanding relationships between different domains through objects and transformations",
      "quote": "Long story short, if we're going to create AGI, a productive AGI is an API that incorporates humans to get better, and you need humans to get better because we need a system that marries documented SOPs with undocumented truths.",
      "practical_application": "Creating mappings between music theory and programming concepts to build intuitive AI interfaces",
      "specific_example": "Using functors and natural transformations to map between the domain of music composition and the domain of functional programming"
    },
    "kullback_leibler_divergence": {
      "description": "Measure of probability distribution divergence, applied to creating adaptive AI systems that bridge knowledge gaps",
      "quote": "The undocumented truths occur between human beings in the context of creative collaboration.",
      "practical_application": "Measuring how much an AI's understanding diverges from human intuition to create better human-AI collaboration",
      "specific_example": "Using KL divergence to optimize AI explanations so they match human mental models of complex concepts"
    }
  },
  "thought_functions_and_prompts": {
    "pitch_anything_model": {
      "structure": [
        "High contract, high impact visual people doing things over time",
        "Talk about the three markets already discussed",
        "Create opportunity narrative",
        "Big idea with high morality",
        "Problem worth solving or job to be done"
      ],
      "principle": "Pitch anything starts with high contract, high impact visual people doing things over time",
      "quote": "Pitch anything starts with high contract, high impact visual people doing things over time. And then we talk about the three markets that you've already talked about, which is, come creating this opportunity, which is the need for donations and liquidity for charities and the need for BTC to flow and the need for there to be a receipt for regulatory and political and legal reasons. And then we have the big idea with interest priced high morality.",
      "practical_application": "Creating compelling narratives for funding requests and project proposals",
      "specific_example": "Using the pitch anything model to request $200K-$1M in internal funding for the payment gateway project"
    },
    "role_based_agent_architecture": {
      "structure": [
        "Task two clawed sub agents",
        "Background agents for specific functions",
        "Cloud code integration for agent management"
      ],
      "principle": "Using sub agents to handle specific tasks and background operations",
      "quote": "Task two clawed sub agents",
      "examples": [
        "Cloud code sub agents for background operations",
        "Task-specific agents for different project functions"
      ],
      "benefit": "Enables complex multi-agent interactions while maintaining user simplicity",
      "implementation_quote": "Because you get access to sub agents. So I don't know if it works or not. I need to try it out. But if you know how I'm doing like a project, the remix life. Right. So like we would have Remix Life Dash Rocky, Remix Life Dash Michael and Remix Life Dash Team and so on and so forth. Everyone on the team. Right. And then I would try and create. Cause you can run background jobs or like background agents, which I think cloud calls sub agents. Right. It's like running a job that doesn't run in the sort of CLI ui. Like it's not showing the progress."
    },
    "metaphor_framework_engineering": {
      "structure": [
        "Identify the familiar domain (music, creative processes)",
        "Map concepts between domains",
        "Create intuitive explanations",
        "Build bridges between technical and non-technical understanding"
      ],
      "principle": "Using familiar domains to explain complex technical concepts",
      "quote": "You know how I have Geometry of Music and create remixes by arranging songs?",
      "practical_application": "Explaining functional programming concepts through music theory and remix creation",
      "specific_example": "Using chord progressions and song structure to explain state management and data flow in Haskell programs"
    }
  },
  "practical_software_implementations": {
    "haskell_remix_engine": {
      "description": "Functional programming implementation of music remix engine using Haskell and Python",
      "quote": "I wonder if I can implement the way I do remixes in Haskell and then Python. Long story short, I did. And that's kind of it. That's a whole thing.",
      "technical_details": "Pure functional nature of Haskell for representing real-world concepts and state management",
      "implementation_status": "Working implementation for single songs, specifically Katy Perry's 'Harleys in Hawaii'",
      "learning_outcome": "Understanding how functional programming can represent real-world concepts through music remix creation"
    },
    "dora_hacks_payment_gateway": {
      "description": "SPBTC payment gateway for nonprofit organizations to accept cryptocurrency donations",
      "quote": "We're doing that on Dora Hacks. I think the end date is September 4th. But yeah, we'll see if we can use these tools to make a cool landing page, you know, do some marketing and then actually create the payment gateway with SPBTC with cloud code.",
      "technical_details": "Integration with Shopify e-commerce platform and Stacks blockchain for donation processing",
      "implementation_status": "MVP development phase with September 4th deadline",
      "learning_outcome": "Creating payment gateways that enable nonprofits to accept cryptocurrency donations with IRS-compliant receipts"
    },
    "nonprofit_donation_system": {
      "description": "System for nonprofits to accept BTC and Stacks donations with automated receipt generation",
      "quote": "As part of the add on or plug in to the payment gateway is we want to let nonprofits be able to accept BTC and Stacks as part of donations and businesses. So I'm not talking like ten, right, $100. Right? Like people who donate that much, they might want a receipt.",
      "technical_details": "Automated receipt generation for tax purposes, integration with existing nonprofit systems",
      "implementation_status": "Part of the DORA Hacks project development",
      "learning_outcome": "Understanding regulatory requirements for cryptocurrency donations and tax compliance"
    },
    "shopify_integration": {
      "description": "E-commerce platform integration for the payment gateway system",
      "quote": "Stacks payment gateway with SPBTC, with Shopify, one of the largest e-commerce platforms on the planet. It works in Nigeria. It also works in South Africa.",
      "technical_details": "Shopify plugin development, cross-border payment processing, multi-currency support",
      "implementation_status": "Planned integration as part of the payment gateway project",
      "learning_outcome": "Leveraging existing e-commerce platforms for blockchain payment integration"
    }
  },
  "key_insights_and_lessons": {
    "functional_programming_insights": {
      "haskell_advantage": "Haskell's pure functional nature makes it better for state management than other paradigms",
      "quote": "So I was like, oh, so you're saying that Haskell is a better tool for state management than other paradigms? And grok said, yeah.",
      "practical_application": "Using Haskell to represent real-world concepts through music remix creation",
      "learning_outcome": "Functional programming forces different thinking about problem-solving and data representation"
    },
    "agi_development_insights": {
      "core_principle": "Productive AGI is an API that incorporates humans to get better",
      "quote": "Long story short, if we're going to create AGI, a productive AGI is an API that incorporates humans to get better, and you need humans to get better because we need a system that marries documented SOPs with undocumented truths.",
      "practical_application": "Creating systems that capture both formal procedures and human intuition",
      "learning_outcome": "The undocumented truths occur between human beings in the context of creative collaboration"
    },
    "startup_culture_insights": {
      "failure_learning": "Focus on what we actually learned rather than getting disappointed from failures",
      "quote": "And that's pretty typical with like startup culture. Right. Is not to get sort of disappointed and sort of dejected from the failures. Right. Just focus on what we actually learned. And we learned a lot like it was the first time that I learned about, like, was it, common graph complexity?",
      "practical_application": "Learning from project failures and focusing on knowledge gained",
      "learning_outcome": "Startup culture emphasizes learning from failures rather than getting discouraged"
    },
    "go_to_market_strategy": {
      "funding_request": "Internal funding request for quarter million to half million dollar project",
      "quote": "Because I'm essentially asking for funds internally to do this project. Right. And so if we're going to ask for a quarter million to half $1 million, it's going to have to look pretty damn good, right?",
      "landing_page_development": "Using tools to create cool landing page for marketing and project presentation",
      "quote_2": "But yeah, we'll see if we can use these tools to make a cool landing page, you know, do some marketing and then actually create the payment gateway with SPBTC with cloud code.",
      "project_timeline": "DORA Hacks submission with September 4th deadline"
    }
  },
  "technical_achievements": {
    "haskell_remix_engine": {
      "project": "Functional programming implementation of music remix engine",
      "quote": "I have it working now for a single song. Katy Perry's Harleys in Hawaii. You're familiar that most songs consist of a repeat of the same chord progression over and over again?",
      "learning_outcome": "Understanding Haskell's pure functional nature for state management and real-world representation",
      "time_to_deploy": "Within conversation timeframe through iterative development",
      "constraint_quote": "I think it forced us to learn how Haskell works because I never used it before either."
    },
    "agi_agent_creation": {
      "agi_philosophy": "Productive AGI is an API that incorporates humans to get better",
      "quote": "Long story short, if we're going to create AGI, a productive AGI is an API that incorporates humans to get better, and you need humans to get better because we need a system that marries documented SOPs with undocumented truths.",
      "core_principle": "Marrying documented SOPs with undocumented truths",
      "human_integration": "Creating systems that capture both formal procedures and human intuition",
      "implementation_quote": "The undocumented truths occur between human beings in the context of creative collaboration. But without that signal processing of human to human, we will never have full context. True context. That's what we need, a true context.",
      "practical_application": "Using cloud code to create agents that can take individual inputs and start creating outputs for collaboration"
    },
    "dora_hacks_payment_gateway": {
      "quote": "And so today we're delivering an MVP for an SPBTC payment gateway to nonprofit organization, accept donations as well as generate receipts based on on chain data, so that nonprofits can utilize the blockchain more efficiently with better, easier to use, user experiences.",
      "content_management": "Blockchain-driven content with separation of concerns",
      "deployment": "DORA Hacks submission with September 4th deadline",
      "implementation_quote": "So my process now. So what I did is I created the lovable. Right. That's one explanation. Now I'm creating the bare bones alternative like variation two. Because anything worth doing is to have at least a couple courses of action explored."
    }
  },
  "future_directions": {
    "dora_hacks_project": {
      "deadline": "September 4th, 2025 submission deadline",
      "quote": "We're doing that on Dora Hacks. I think the end date is September 4th. But yeah, we'll see if we can use these tools to make a cool landing page, you know, do some marketing and then actually create the payment gateway with SPBTC with cloud code.",
      "next_steps": "Complete MVP development, create landing page, implement payment gateway",
      "long_term_vision": "Enable nonprofits globally to accept cryptocurrency donations efficiently"
    },
    "career_evolution": {
      "current_position": "Engineering manager leading teams and projects",
      "quote": "At an agency scale that up went into senior positions and now I'm officially an engineering manager. Right. And so how does that evolve into running a team? Running a company.",
      "next_steps": "Company building and entrepreneurial leadership",
      "long_term_vision": "Building scalable technical solutions and teams"
    },
    "technical_advancement": {
      "haskell_development": "Continue developing the remix engine for multiple songs and genres",
      "quote": "I have it working now for a single song. Katy Perry's Harleys in Hawaii. You're familiar that most songs consist of a repeat of the same chord progression over and over again?",
      "next_steps": "Scale from single-song to multi-song remix engine",
      "long_term_vision": "Create a comprehensive music remix platform using functional programming"
    },
    "team_scaling": {
      "mentorship_system": "Building self-sustaining guilds and mentorship systems",
      "quote": "In terms of mentorship, you do what the team members do, which is they go out and they just do the thing I told them to do. Right. Whether it's a good idea or not. Right. I think early on, like, you just don't know enough as the quote, quote mentee to give feedback.",
      "next_steps": "Create systematic mentorship programs and team building systems",
      "long_term_vision": "Self-sustaining technical communities and guilds"
    }
  },
  "methodological_principles": {
    "human_ai_collaboration": {
      "principle": "Marrying documented SOPs with undocumented truths",
      "quote": "Long story short, if we're going to create AGI, a productive AGI is an API that incorporates humans to get better, and you need humans to get better because we need a system that marries documented SOPs with undocumented truths.",
      "practical_application": "Creating systems that capture both formal procedures and human intuition",
      "specific_example": "The undocumented truths occur between human beings in the context of creative collaboration."
    },
    "exponential_organization": {
      "principle": "Career progression from individual contributor to team leadership and company building",
      "quote": "At an agency scale that up went into senior positions and now I'm officially an engineering manager. Right. And so how does that evolve into running a team? Running a company.",
      "practical_application": "Creating scalable career paths that evolve from technical work to leadership",
      "specific_example": "Transitioning from engineering work to mentoring others and helping them go on their journey."
    },
    "creative_constraint_engineering": {
      "principle": "Using constraints to force creativity and decision-making",
      "quote": "Work expands to fill the time allotted - constrain time to increase focus",
      "practical_application": "Setting artificial deadlines and constraints to force rapid iteration",
      "specific_example": "Using Google Meet's 1-hour limit to force rapid decision-making and deployment."
    }
  },
  "live_development": {
    "haskell_remix_engine": {
      "development_timeline": "Built within conversation timeframe",
      "technical_decisions": "Functional programming approach for state management",
      "live_results": "Working single-song remix engine for Katy Perry's 'Harleys in Hawaii'",
      "constraints": "1-hour Google Meet limit forcing rapid decision-making",
      "learning_outcomes": "Understanding Haskell's pure functional nature for real-world representation",
      "quote": "I have it working now for a single song. Katy Perry's Harleys in Hawaii. You're familiar that most songs consist of a repeat of the same chord progression over and over again?",
      "implementation_details": "Chord progression analysis, song structure rearrangement, real-time remix generation"
    },
    "system_prompt_engineering": {
      "development_timeline": "Real-time prompt development during conversation",
      "technical_decisions": "Creating comprehensive prompts that enable personalized explanations",
      "live_results": "Functional system prompts for AI agent development",
      "constraints": "Need for deterministic behavior with controlled creativity",
      "learning_outcomes": "Balancing AI creativity (25%) with deterministic responses",
      "quote": "So now that we have the system prompt. All right, now provide the full and exhaustive system prompt, including knowledge, table and format as markdown. Bang. Bang. So now that that's happening, where is my conversational AI?",
      "implementation_details": "System prompt development, AI agent configuration, creativity control"
    },
    "real_time_iteration": {
      "development_timeline": "Continuous improvement throughout conversation",
      "technical_decisions": "Using programming knowledge to create practical applications",
      "live_results": "Remix engine that takes songs and rearranges them to make new songs",
      "constraints": "Learning curve from beginner to functional implementation",
      "learning_outcomes": "Proving that thinking and creating software approach works",
      "quote": "I just learned how to do all the complex things to turn my user interfaces into actual applications. So long story short, without being too boring, today I used what I learned about programming to create a remix engine. It takes a song and we arranges the song to make a new song. I know that it's kind of on the left field, but that's what I just did. Using the learning that I have now. So the song extension is just a way to prove that the way that we're thinking and creating software works."
    }
  },
  "tool_integration": {
    "midjourney": {
      "purpose": "Content creation for landing pages and marketing materials",
      "integration_challenge": "Complex prompt engineering and content quality consistency",
      "solution": "Data structure as film director for better prompting",
      "results": "Improved visual content quality and consistency",
      "quote": "And so we just Midjourney has a lot of nuances, right? That may or may not be different from other prompting tools. Right. And I was struggling with that.",
      "technical_implementation": "JSON data structures acting as film director prompts",
      "business_impact": "Professional landing pages for funding requests"
    },
    "shopify": {
      "purpose": "E-commerce platform integration for payment gateway",
      "integration_challenge": "Integrating blockchain payments with traditional e-commerce",
      "solution": "Shopify plugin development for SPBTC payments",
      "results": "Cross-border payment processing capability",
      "quote": "Stacks payment gateway with SPBTC, with Shopify, one of the largest e-commerce platforms on the planet. It works in Nigeria. It also works in South Africa.",
      "technical_implementation": "Shopify plugin with blockchain payment integration",
      "business_impact": "Enabling nonprofits to accept cryptocurrency donations globally"
    }
  },
  "hackathon_journey": {
    "dora_hacks": {
      "project": "SPBTC payment gateway for nonprofit organizations",
      "deadline": "September 4th, 2025",
      "technical_stack": "Stacks blockchain + Shopify integration",
      "business_model": "Donation processing with IRS-compliant receipts",
      "current_status": "MVP development phase",
      "quote": "And so today we're delivering an MVP for an SPBTC payment gateway to nonprofit organization, accept donations as well as generate receipts based on on chain data, so that nonprofits can utilize the blockchain more efficiently with better, easier to use, user experiences.",
      "technical_challenges": "Blockchain integration, regulatory compliance, user experience",
      "market_opportunity": "Enabling nonprofits to accept cryptocurrency donations efficiently"
    },
    "project_evolution": {
      "initial_concept": "Payment gateway for nonprofit donations",
      "development_phases": "MVP development, testing, deployment",
      "integration_partners": "Shopify for e-commerce platform, Stacks for blockchain",
      "regulatory_requirements": "IRS-compliant receipts, tax documentation",
      "quote": "We're doing that on Dora Hacks. I think the the end date is September 4th. But yeah, we'll see if we can use these tools to make a cool landing page, you know, do some marketing and then actually create the, the payment gateway with Sbdc with, cloud code.",
      "success_metrics": "Donation volume, user adoption, regulatory compliance"
    },
    "business_impact": {
      "target_market": "Nonprofit organizations seeking cryptocurrency donation capabilities",
      "value_proposition": "Efficient, compliant, user-friendly crypto donation processing",
      "competitive_advantage": "Blockchain-driven transparency with traditional payment ease",
      "scaling_potential": "From individual nonprofits to platform-wide deployment",
      "quote": "So you can file it in your tax return at the end of the year. Right. And so, what are the what are the implications of not solving this? Well, the implication is, TVL on stacks does not grow. Transaction volume continues to plateau. If not, go down. Right.",
      "long_term_vision": "Mainstream adoption of cryptocurrency in nonprofit sector"
    }
  },
  "mentorship_dynamics": {
    "mentorship_natural_development": {
      "early_experience": "Volunteering and working with young adults since high school",
      "quote": "I mean, I think mentorship came natural because, like, ever since high school, I was already volunteering, right? Working with young adults and high schoolers. Well, that that was more like faith based. But, you know, when you, every single week, you're trying to pull out answers from high schoolers, so you get pretty good at it, even though you suck in the beginning.",
      "skill_development": "Learning to extract answers and help others through weekly practice",
      "practical_application": "Organizing thoughts and sharing with someone younger going through a similar journey"
    },
    "team_building_approach": {
      "current_role": "Coach and team organizer",
      "quote": "So I would say, coach, I would say currently is myself. I'm a pretty good like, I'm pretty good at putting the team together.",
      "team_structure": "Basketball team analogy with social glue and old head management",
      "quote_2": "How is a basketball team? And sometimes there's like an old head like Charles Oakley that manages the clubhouse and gets them, but you know what I mean. Who are those people that are the kind of people underlying the people that make the whole thing work?",
      "leadership_style": "Coordinating and managing people to help them succeed"
    },
    "career_transition_mentorship": {
      "personal_journey": "From junior developer to engineering manager",
      "quote": "How did I quickly level up from a junior developer to a sole contributor or solo contributor? Right. At an agency scale that up went into senior positions and now I'm officially an engineering manager. Right. And so how does that evolve into running a team? Running a company.",
      "mentorship_evolution": "Transition from individual contributor to helping others on their journey",
      "quote_2": "Can you talk about the transition of you going on your journey to helping others go on the journey because that's really the next exciting part. I think, given your case studies.",
      "next_steps": "Scaling mentorship from individual to systematic team building"
    }
  },
  "career_evolution": {
    "technical_progression": {
      "starting_point": "Individual contributor in engineering roles",
      "skill_development": "Learning functional programming, AI integration, system design",
      "current_position": "Engineering manager leading teams and projects",
      "quote": "At an agency scale that up went into senior positions and now I'm officially an engineering manager. Right. And so how does that evolve into running a team? Running a company.",
      "learning_curve": "From technical implementation to architectural decision-making",
      "next_steps": "Company building and entrepreneurial leadership"
    },
    "leadership_development": {
      "mentorship_natural": "Volunteering and helping others since high school",
      "team_management": "Leading engineering teams and projects",
      "founder_mindset": "Building startups and launching new ventures",
      "quote": "I mean, I think mentorship came natural because, like, ever since high school, I was already volunteering, right? Working with young adults and high schoolers.",
      "leadership_style": "Hands-on mentorship through practical project work",
      "scaling_challenge": "Moving from individual mentorship to systematic team building"
    },
    "entrepreneurial_journey": {
      "headhunting_experience": "Launching startups with syndicates",
      "project_development": "Building technical solutions for real business problems",
      "market_understanding": "Identifying opportunities in nonprofit and blockchain sectors",
      "quote": "Hello, my name is Michael Jag day when I'm a headhunter launching startups with the syndicate.",
      "business_model": "Combining technical expertise with business development",
      "future_vision": "Building scalable technical solutions and teams"
    }
  },
  "hero_banner_and_prototypes": {
    "title": "Live Prototypes and Demonstrations",
    "description": "Working implementations created during the Twitter Spaces conversation",
    "prototypes": [
      {
        "name": "Haskell Remix Engine",
        "platform": "Haskell + Python",
        "description": "Functional programming implementation of music remix engine that can rearrange chord progressions and song structures",
        "url": "[PLACEHOLDER_URL_1]",
        "features": [
          "Chord progression analysis",
          "Song structure rearrangement",
          "Functional programming principles",
          "Real-time remix generation"
        ],
        "creation_time": "Within conversation timeframe",
        "quote": "I have it working now for a single song. Katy Perry's Harleys in Hawaii. You're familiar that most songs consist of a repeat of the same chord progression over and over again?",
        "deployment_method": "Local Haskell environment with Python integration"
      },
      {
        "name": "DORA Hacks Payment Gateway",
        "platform": "Stacks Blockchain + Shopify",
        "description": "SPBTC payment gateway for nonprofit organizations to accept cryptocurrency donations with automated receipt generation",
        "url": "[PLACEHOLDER_URL_2]",
        "features": [
          "Cryptocurrency donation processing",
          "IRS-compliant receipt generation",
          "Shopify integration",
          "Cross-border payment support"
        ],
        "creation_time": "MVP development phase",
        "quote": "We're doing that on Dora Hacks. I think the end date is September 4th. But yeah, we'll see if we can use these tools to make a cool landing page, you know, do some marketing and then actually create the payment gateway with SPBTC with cloud code.",
        "deployment_method": "DORA Hacks submission with September 4th deadline"
      }
    ],
    "methodology": {
      "development_approach": "Using programming knowledge to turn user interfaces into actual applications",
      "learning_focus": "Proving that the way of thinking and creating software works",
      "quote": "I just learned how to do all the complex things to turn my user interfaces into actual applications. So long story short, without being too boring, today I used what I learned about programming to create a remix engine. It takes a song and we arranges the song to make a new song. I know that it's kind of on the left field, but that's what I just did. Using the learning that I have now. So the song extension is just a way to prove that the way that we're thinking and creating software works."
    }
  }
}
